<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE subsection
  PUBLIC "urn:pubid:dita4publishers.org:doctypes:dita:subsection" "subsection.dtd">
<subsection id="d5e330"><title>Defining conversation </title><body><p>Conversation<indexterm>conversations<indexterm>defining</indexterm></indexterm> as a
        discourse is nearly undefinable since it spans so many speech events and environments from
        informal to formal, intimate to public, and argumentative to collaborative, plus many more
        in a spectrum. But certain contexts for <indexterm>conversations<indexterm>joining</indexterm></indexterm>conversation are useful for <indexterm>technical
            documentation<indexterm>benefiting from conversation</indexterm></indexterm><indexterm>technical documentation<indexterm>conversations within</indexterm></indexterm><indexterm>social media<indexterm>technical writers and</indexterm></indexterm>documentation, such
        as the communities of practice that allow users to participate in conversations that Nicky
          <indexterm>Bleiel, Nicky</indexterm>Bleiel describes as “Convergence Technical
        Communication” in an article for The Content Wrangler.<fn>
          <p>
            http://www.thecontentwrangler.com/article/convergence_technical_communication_strategies_for_incorporating_web_20/</p>
        </fn></p><p>Imagine that you are assigned to answer customer support calls at a mobile phone network
        supplier for a day. You would establish a connection with each customer, put a name with a
        voice or face or email address, and from a quick customer database search, you know who the
        customer works for and what that customer’s role is in their company. Thanks to your
        company’s call log, you might know the exact problem each customer is wrestling with and be
        able to pinpoint the information they need to solve their problems. </p><p>If writers had that much information every time they started writing a new document,
        section, or topic, they could be more effective for one individual customer. But technical
        guides usually need to help hundreds of such customers. So imagine instead that you are
        reading a deep technical debate in the discussion area of a wiki, on a customer’s blog, or a
        140-character Twitter post. How would you rewrite your documentation to answer that users’
        exact question, and then make the information accessible to any user? And, can you step into
        the conversation by posting a response that gives that user the right information at the
        right time?</p></body></subsection>