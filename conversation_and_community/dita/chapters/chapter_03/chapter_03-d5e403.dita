<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE subsection
  PUBLIC "urn:pubid:dita4publishers.org:doctypes:dita:subsection" "subsection.dtd">
<subsection id="d5e403"><title>Platform or stage phase</title><body><p>If the first three phases yielded <indexterm>content<indexterm>platforms
            for</indexterm></indexterm>connections and a sense of community that you could tap for
          growing community-based documentation, your final phase might be to create a <indexterm>communities<indexterm>wikis supporting</indexterm></indexterm>wiki for your product,
          either as a supplement to your documentation or as the new home of your entire user
          assistance content. </p><p>Alternatively, if users and customers have enough to say about your product that you
          think it would be helpful to the community to host a blog, the result of the first two
          phases might be to offer a blogging platform. </p><p>You might find that a forum becomes a platform for developers to collaborate with each
          other on projects. The <indexterm>communities<indexterm>EMC</indexterm></indexterm><indexterm>communities<indexterm>examples of
              online</indexterm></indexterm>EMC Community offers blogs, forums, and social media
          opportunities on platforms such as Facebook and Flickr in one community site at
          emc.com/community. </p><p>Another example of a social media plaat sun.com/communities. Two writers, Gail <indexterm>Chappell, Gail</indexterm>Chappell and Cindy <indexterm>Church,
          Cindy</indexterm>Church, presented their experience with Sun at the 2008 <indexterm>STC
            Summit</indexterm>STC Summit. Both their product and their <indexterm>social
              media<indexterm>audience analysis</indexterm></indexterm>audience were a good match
          for providing a platform for documentation through a wiki. Their audience was college-age
          developers in school plus industry-savvy developers in the workforce, both busily coding
          enterprise applications using <indexterm>open source<indexterm>NetBeans
            Ruby</indexterm></indexterm><indexterm>NetBeans Ruby</indexterm>NetBeans Ruby. Itâ€™s a
          free, open-source software tool for creating Ruby language programs and part of the
          NetBeans integrated development environment. </p><p>For their case study, contributions from the community were welcomed, both for the
          product and the documentation. The wiki did not take off as a platform for
          community-generated content as you might think, though. They used the <indexterm>open
              source<indexterm>wikis for</indexterm></indexterm>wiki for providing drafts of
          documentation and delivering info quickly. Content on the wiki did not need to be perfect
          or in a strict template. Once a draft was posted to the wiki, writers then posted a
          message to the user forum to let them know they could review it. Once the content was
          reviewed and vetted, writers transferred it to the main website instead of the wiki. One
          lesson to learn from their experience is that even though the writers provided a platform
          for community content, the model that was most valuable was using the wiki for drafting
          content then transferring the content to a non-platform-based deliverable.</p></body></subsection>